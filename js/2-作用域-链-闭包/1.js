function bar() {
  console.log(myName);
}
function foo() {
  let myName = "极客";
  bar();
}
let myName = "骑士"; 
foo(); // 为什么输出的是“骑士”，而不是“极客”？  bar域foo是在全局创建的，两个函数在声明时会创建词法作用域，会指向全局作用域，所以在执行时会在全局作用域中查找变量，所以输出的是“骑士”
// foo和bar处于
// 作用域链的创建
// 函数在声明的时候会声明一个scope属性，指向当前作用域，这里是全局作用域


// 栈底是全局作用域->foo()作用域->bar()作用域 
// 为什么全局作用域在最底？
// 因为全局作用域的变量可以被任何作用域访问到，所以在栈底，若全局执行上下文出栈，那么所有作用域的变量都会被销毁
// 
